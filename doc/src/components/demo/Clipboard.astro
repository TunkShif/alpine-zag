---
import { button, input } from "@/styles"
import DemoCard from "@/components/DemoCard.astro"
import ClipboardCheckIcon from "@/components/icons/ClipboardCheckIcon.astro"
import ClipboardInIcon from "@/components/icons/ClipboardInIcon.astro"
---

<script>
  import { normalizeProps, useAPI, useMachine } from "@tunkshif/alpine-zag"
  import { id } from "@/utils"
  import * as clipboard from "@zag-js/clipboard"
  import Alpine from "alpinejs"

  document.addEventListener("alpine:init", () => {
    Alpine.data("Clipboard", (controls) => {
      const service = useMachine(Alpine, clipboard.machine({ id: id() }), { context: controls })
      const api = useAPI(Alpine, () =>
        clipboard.connect(service.state.value, service.send, normalizeProps)
      )
      return {
        init() {
          service.start()
          api.start()
        },
        destroy() {
          api.stop()
          service.stop()
        },
        get api() {
          return api.value
        }
      }
    })
  })
</script>

<DemoCard
  name="clipboard"
  file="Clipboard"
  title="Clipboard"
  controls={{ value: "https://example.com", timeout: 1500 }}
>
  <div
    slot="content"
    x-data="Clipboard(controls)"
    x-props="api.rootProps"
    class="flex flex-col gap-1"
  >
    <label x-props="api.labelProps" class="font-medium">Copy your subscription link</label>
    <div x-props="api.controlProps" class="flex items-center gap-2">
      <input x-props="api.inputProps" class={input("h-10")} />
      <button
        x-props="api.triggerProps"
        class={button(
          "shrink-0 w-10 h-10 p-0 justify-center items-center shadow-sm border-slate-300"
        )}
      >
        <ClipboardInIcon x-show="!api.isCopied" class="w-4 h-4" aria-label="copy to clipboard" />
        <ClipboardCheckIcon x-show="api.isCopied" class="w-4 h-4" aria-label="text copied" />
      </button>
    </div>
  </div>

  <div slot="control" class="w-full flex flex-col gap-2">
    <div class="flex flex-col gap-2 text-sm">
      <label class="flex flex-col gap-1.5">
        <span>Value</span>
        <input type="text" x-model="controls.value" class={input()} />
      </label>
      <label class="flex justify-between items-center text-sm">
        <span>Timeout</span>
        <input type="number" min="1" x-model="controls.timeout" class={input("max-w-24")} />
      </label>
    </div>
  </div>
</DemoCard>
