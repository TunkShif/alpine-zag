---
import DemoCard from "@/components/DemoCard.astro"
import ChevronRightIcon from "@/components/icons/ChevronRightIcon.astro"
---

<script>
  import { getComponent } from "@tunkshif/alpine-zag"
  import Alpine from "alpinejs"

  document.addEventListener("alpine:init", () => {
    const Menu = getComponent("Menu")

    Alpine.data("ContextMenu", () => {
      const selected = Alpine.reactive({ value: null })
      const handleSelect = ({ value }) => {
        selected.value = value
      }
      const actionMenu = Menu({ "aria-label": "Action", onSelect: handleSelect })
      const shareMenu = Menu({ "aria-label": "Share", onSelect: handleSelect })
      return {
        init() {
          this.actionMenu.start()
          this.shareMenu.start()

          Alpine.nextTick(() => {
            this.actionMenu.api.setChild(shareMenu.machine)
            this.shareMenu.api.setParent(actionMenu.machine)
          })
        },
        destroy() {
          this.shareMenu.stop()
          this.actionMenu.stop()
        },
        actionMenu,
        shareMenu,
        get selected() {
          return selected.value
        },
        get actionMenuApi() {
          return this.actionMenu.api
        },
        get shareMenuApi() {
          return this.shareMenu.api
        }
      }
    })
  })
</script>

<DemoCard name="context-menu" file="ContextMenu" title="Context Menu">
  <div slot="content" x-data="ContextMenu">
    <div class="flex flex-col gap-2 justify-center items-center">
      <div x-props="actionMenuApi.contextTriggerProps">Open Context Menu</div>
      <div x-show="selected" class="text-sm text-gray-500">
        You selected <span x-text="selected" class="font-medium"></span>
      </div>
    </div>
    <template x-teleport="body">
      <div x-cloak x-props="actionMenuApi.positionerProps">
        <div x-props="actionMenuApi.contentProps">
          <ul class="flex flex-col gap-0.5">
            <li x-props="actionMenuApi.getItemProps({ value: 'Back' })">Back</li>
            <li x-props="actionMenuApi.getItemProps({ value: 'Forward' })">Forward</li>
            <li x-props="actionMenuApi.getItemProps({ value: 'Reload' })">Reload</li>
            <li x-props="actionMenuApi.getItemProps({ value: 'Save As' })">Save As</li>
            <li x-props="actionMenuApi.getTriggerItemProps(shareMenuApi)">
              <span class="mr-auto">Share</span>
              <ChevronRightIcon class="w-3.5 h-3.5" />
            </li>
            <li x-props="actionMenuApi.getItemProps({ value: 'Print' })">Print</li>
            <li x-props="actionMenuApi.getItemProps({ value: 'Help' })">Help</li>
          </ul>
        </div>
      </div>
    </template>
    <template x-teleport="body">
      <div x-cloak x-props="shareMenuApi.positionerProps">
        <div x-props="shareMenuApi.contentProps">
          <ul class="flex flex-col gap-0.5">
            <li x-props="shareMenuApi.getItemProps({ value: 'Send via E-Mail' })">
              Send via E-Mail
            </li>
            <li x-props="shareMenuApi.getItemProps({ value: 'Send to Device' })">Send to Device</li>
            <li x-props="shareMenuApi.getItemProps({ value: 'Share to Twitter' })">
              Share to Twitter
            </li>
          </ul>
        </div>
      </div>
    </template>
  </div>
</DemoCard>

<style>
  [data-part="context-trigger"] {
    @apply p-8 font-medium rounded-lg border-2 border-dashed border-gray-200 bg-white text-slate-500 text-sm;
  }

  [data-part="content"] {
    @apply relative z-[1400] min-w-40 bg-white border border-slate-200/40 p-1.5 rounded-md shadow-md outline-none;
  }

  [data-part="item"],
  [data-part="trigger-item"] {
    @apply inline-flex items-center p-1.5 text-sm font-medium rounded-md select-none cursor-pointer;
  }

  [data-part="item"][data-highlighted] {
    @apply bg-gray-50;
  }

  [data-part="trigger-item"][data-state="open"] {
    @apply bg-gray-50;
  }
</style>
